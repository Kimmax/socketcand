name: native and cross

on: [push, pull_request]

jobs:
  build:
    runs-on: ubuntu-24.04
    strategy:
      fail-fast: false
      matrix:
        release:
        - "ubuntu:20.04"
        - "ubuntu:22.04"
        - "ubuntu:24.04"
        - "ubuntu:rolling"
        - "debian:oldstable-slim"
        - "debian:stable-slim"
        - "debian:testing-slim"
        - "debian:unstable-slim"
        - "debian:experimental"

    steps:
    - uses: actions/checkout@v4

    - name: Prepare ${{ matrix.release }} container
      env:
        release: ${{ matrix.release == 'debian:experimental' && '-t experimental' || '' }}
      run: |
        podman version
        podman run --name stable -di --userns=keep-id:uid=1000,gid=1000 -v "$PWD":/home -w /home ${{ matrix.release }} bash
        podman exec -i stable uname -a
        podman exec -i stable id
        podman exec -i -u root stable apt update
        podman exec -e DEBIAN_FRONTEND='noninteractive' -i -u root stable apt install -o APT::Install-Suggests=false -qy ${release} \
                clang \
                cmake \
                gcc \
                gcc-aarch64-linux-gnu \
                gcc-arm-linux-gnueabihf \
                gcc-mips-linux-gnu \
                meson \
                libsocketcan-dev \
                libconfig-dev

    - name: Configure & Build with gcc
      env:
        cc: gcc
      run: |
        podman exec -i stable meson setup -Dlibconfig=true -Dlibsocketcan=true build-${cc}
        podman exec -i stable ninja -C build-${cc}

    - name: Configure & Build with clang
      env:
        cc: clang
      run: |
        podman exec -i stable meson setup -Dlibconfig=true -Dlibsocketcan=true build-${cc}
        podman exec -i stable ninja -C build-${cc}
